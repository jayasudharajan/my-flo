---
service: flo-insurance-letter-conversion-lambda
# app and org for use with dashboard.serverless.com
app: insurance-letter-conversion-lambda

custom:
  accountId:
    dev: "098786959887"
    prod: "617288038711"
  defaultDynamoInsuranceLetterRequestLog: InsuranceLetterRequestLog
  defaultLambdaTimeoutInSeconds: 15
  defaultRegion: us-west-2
  defaultS3Bucket: flocloud-letters
  defaultS3PdfKey: pdf
  defaultS3PngKey: png
  defaultFontConfigPath: /var/task/fonts/
  dynamoInsuranceLetterRequestLog: ${env:DYNAMO_INSURANCE_LETTER_REQUEST_LOG, "${opt:stage}_${self:custom.defaultDynamoInsuranceLetterRequestLog}"}
  lambdaTimeoutInSeconds: ${self:custom.defaultLambdaTimeoutInSeconds, env:LAMBDA_TIMEOUT_IN_SECONDS}
  region: ${opt:region, self:custom.defaultRegion}
  s3Bucket: ${env:S3_BUCKET, self:custom.defaultS3Bucket}
  s3PdfKey: ${env:S3_PDF_KEY, self:custom.defaultS3PdfKey}
  s3PngKey: ${env:S3_PNG_KEY, self:custom.defaultS3PngKey}
  fontConfigPath: ${env:FONTCONFIG_PATH, self:custom.defaultFontConfigPath}


provider:
  name: aws
  runtime: nodejs18.x
  region: ${self:custom.region}
  memorySize: 512
  timeout: ${self:custom.lambdaTimeoutInSeconds}
  logRetentionInDays: 14
  environment:
    DYNAMO_INSURANCE_LETTER_REQUEST_LOG: ${self:custom.dynamoInsuranceLetterRequestLog}
    S3_BUCKET: ${self:custom.s3Bucket}
    S3_PDF_KEY: ${self:custom.s3PdfKey}
    S3_PNG_KEY: ${self:custom.s3PngKey}
    FONTCONFIG_PATH: ${self:custom.fontConfigPath}

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:Putitem"
        - "dynamodb:Updateitem"
      Resource: "arn:aws:dynamodb:${self:custom.region}:${self:custom.accountId.${opt:stage}}:table/${self:custom.dynamoInsuranceLetterRequestLog}"
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource: "arn:aws:logs:*:*:*"
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: "arn:aws:s3:::${self:custom.s3Bucket}"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:PutObjectAcl"
        - "s3:PutObjectTagging"
        - "s3:PutObjectVersionAcl"
        - "s3:PutObjectVersionTagging"
      Resource: "arn:aws:s3:::${self:custom.s3Bucket}/*"

functions:
  handle:
    handler: src/index.handler
