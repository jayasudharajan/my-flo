---
image: node:8-alpine

variables:
  DOCKER_HOST: tcp://localhost:2375

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

before_script:
  # https://github.com/npm/uid-number/issues/3#issuecomment-291362937
  - npm config set unsafe-perm true
  - npm install -g serverless
  - npm audit || true

dev:
  environment:
    name: dev
  only:
    - dev
  variables:
    ACCOUNT_ID: 098786959887
    AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID_DEV}"
    AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY_DEV}"
    DYNAMODB_STREAM_ID: "${DYNAMODB_STREAM_ID_DEV}"
    PINPOINT_APP_ID: "${PINPOINT_APP_ID_DEV}"
    TABLE_PREFIX: dev
  script:
    - npm install
    - serverless deploy --verbose --force --stage dev

pre-prod:
  environment:
    name: pre-prod
  only:
    - master
  variables:
    ACCOUNT_ID: 617288038711
    AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID_PREPROD}"
    AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY_PREPROD}"
    DYNAMODB_STREAM_ID: "${DYNAMODB_STREAM_ID_PREPROD}"
    PINPOINT_APP_ID: "${PINPOINT_APP_ID_PREPOD}"
    TABLE_PREFIX: prod
  script:
    - npm install
    # Had to shorten pre-prod to preprd because otherwise AWS will complain on the length of the generated Lambda Role names
    - serverless deploy --verbose --force --stage preprd

prod:
  environment:
    name: prod
  only:
    - master
  variables:
    ACCOUNT_ID: 617288038711
    AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID_PROD}"
    AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY_PROD}"
    DYNAMODB_STREAM_ID: "${DYNAMODB_STREAM_ID_PROD}"
    PINPOINT_APP_ID: "${PINPOINT_APP_ID_PROD}"
    TABLE_PREFIX: prod
  script:
    - npm install
    - serverless deploy --verbose --force --stage prod
