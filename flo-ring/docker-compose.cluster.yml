version: "3.8"

services:
  app:
    image: flo-ring:local
    ports:
      - "8080:8080"
    environment:
      APPLICATION_NAME: "flo-ring"
      FLO_API_RING_SERVICE_ACCESS_TOKEN: "complete-me"
      FLO_API_URL: "https://api-gw-dev.flocloud.co"
      FLO_HTTP_PORT: 8080
      #FLO_KAFKA_CN: "kafka-cherry-broker-1.dev.flocloud.co:9092,kafka-cherry-broker-2.dev.flocloud.co:9092,kafka-cherry-broker-3.dev.flocloud.co:9092"
      FLO_KAFKA_CN: "kafka:29092"
      FLO_KAFKA_GROUP_ID: "flo-ring-local"
      FLO_KAFKA_TOPIC_ENTITY_ACTIVITY: "entity-activity-v1"
      FLO_KAFKA_TOPIC_VALVE_STATE: "valve-state-v1"
      FLO_LOCAL_DEBUG: "true"
      FLO_LOG_MIN_LEVEL: 1
      FLO_REDIS_CN: "redis-0:6379 redis-1:6379 redis-2:6379 redis-3:6379 redis-4:6379 redis-5:6379 password=pwd"
      FLO_SNS_REGION: us-west-2
      FLO_SNS_TOPIC_ARN: "arn:aws:sns:us-west-2:098786959887:test-ring"
    volumes:
      - "./src:/src"
    depends_on:
      - kafka
      - redis-cluster-init
    build:
      context: .
      dockerfile: ./Dockerfile.build
      args:
        CI_COMMIT_SHA: "${CI_COMMIT_SHA:-none}"

  redis-0:
    image: bitnami/redis-cluster:latest
    #CONNECT w/ local client (psql can be used instead of redis-cli also): redis-cli -u redis://:pwd@localhost:6379 -c
    ports:
      - "6379:6379"
    # volumes:
    #   - ./db/tmp/redis-0:/bitnami/redis/data
    environment:
      #- 'ALLOW_EMPTY_PASSWORD=yes'
      - "REDIS_PASSWORD=pwd"
      - "REDIS_NODES=redis-0 redis-1 redis-2 redis-3 redis-4 redis-5"
    logging:
      driver: none
  redis-1:
    image: bitnami/redis-cluster:latest
    ports:
      - "16379:6379"
    # volumes:
    #   - ./db/tmp/redis-1:/bitnami/redis/data
    environment:
      - "REDIS_PASSWORD=pwd"
      - "REDIS_NODES=redis-0 redis-1 redis-2 redis-3 redis-4 redis-5"
    logging:
      driver: none
  redis-2:
    image: bitnami/redis-cluster:latest
    ports:
      - "26379:6379"
    # volumes:
    #   - ./db/tmp/redis-2:/bitnami/redis/data
    environment:
      - "REDIS_PASSWORD=pwd"
      - "REDIS_NODES=redis-0 redis-1 redis-2 redis-3 redis-4 redis-5"
    logging:
      driver: none
  redis-3:
    image: bitnami/redis-cluster:latest
    ports:
      - "36379:6379"
    # volumes:
    #   - ./db/tmp/redis-3:/bitnami/redis/data
    environment:
      - "REDIS_PASSWORD=pwd"
      - "REDIS_NODES=redis-0 redis-1 redis-2 redis-3 redis-4 redis-5"
    logging:
      driver: none
  redis-4:
    image: bitnami/redis-cluster:latest
    ports:
      - "46379:6379"
    # volumes:
    #   - ./db/tmp/redis-4:/bitnami/redis/data
    environment:
      - "REDIS_PASSWORD=pwd"
      - "REDIS_NODES=redis-0 redis-1 redis-2 redis-3 redis-4 redis-5"
    logging:
      driver: none
  redis-5:
    image: bitnami/redis-cluster:latest
    ports:
      - "56379:6379"
    # volumes:
    #   - ./db/tmp/redis-5:/bitnami/redis/data
    environment:
      - "REDIS_PASSWORD=pwd"
      - "REDIS_NODES=redis-0 redis-1 redis-2 redis-3 redis-4 redis-5"
    logging:
      driver: none
  redis-cluster-init:
    image: bitnami/redis-cluster:latest
    depends_on:
      - redis-0
      - redis-1
      - redis-2
      - redis-3
      - redis-4
      - redis-5
    environment:
      - "REDISCLI_AUTH=pwd"
      - "REDIS_CLUSTER_REPLICAS=1"
      - "REDIS_NODES=redis-0 redis-1 redis-2 redis-3 redis-4 redis-5"
      - "REDIS_CLUSTER_CREATOR=yes"

  zookeeper:
    image: "bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    restart: on-failure
    # volumes:
    #   - "./db/tmp/zookeeper:/bitnami/zookeeper"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    logging:
      driver: none

  #NOTE: both zookeeper & kafka username & pwd are: user & bitnami
  kafka:
    image: "bitnami/kafka:2"
    #CONNECT tail w/ local client (run 2x, 1st run will mk topic): kafkacat -C -b localhost:29092 -t 'email-weekly-loc' -p 0
    #push dummy data w/ local client: echo '{"client_app_name":"kafcat"}' | kafkacat -P -b localhost:29092 -t 'email-weekly-loc' -p 0
    ports:
      - "9092:9092"
      - "29092:29092"
    # volumes:
    #   - "./db/tmp/kafka:/bitnami/kafka"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper
    logging:
      driver: none
