apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "flo-device-service.fullname" . }}
  labels:
    app: {{ template "flo-device-service.name" . }}
    app.kubernetes.io/name: {{ include "flo-device-service.name" . }}
    app.kubernetes.io/environment: {{ .Values.secrets.datas.ENVIRONMENT }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "flo-device-service.chart" . }}
spec:
{{ if eq .Values.environment "production" }}
  replicas: {{ .Values.replicaCount }}
{{ else  }}
  replicas: 1
{{ end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "flo-device-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "flo-device-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - name: certs
        secret:
          secretName: flocloud-device-secrets
          defaultMode: 256
          items:
            - key: MQTT_SSL_CONFIGURATION_BROKER_CA_CERTIFICATE
              path: flo-ca-certificate.pem
            - key: MQTT_SSL_CONFIGURATION_CLIENT_CERT
              path: client-cert.pem
            - key: MQTT_SSL_CONFIGURATION_CLIENT_KEY
              path: client-key.pem
      - name: creds
        secret:
          secretName: flocloud-device-secrets
          defaultMode: 256
          items:
            - key: flo_ds_service_account_key.json
              path: flo_ds_service_account_key.json
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: certs
              mountPath: "/app/certs"
              readOnly: true
            - name: creds
              mountPath: "/app/creds"
              readOnly: true

          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.service.livenessProbe.path }}
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.service.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.service.livenessProbe.periodSeconds }}
            successThreshold: 1
            timeoutSeconds: {{ .Values.service.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.service.readinessProbe.path }}
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.service.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.service.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.service.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.service.readinessProbe.timeoutSeconds }}
          env:
          - name: INSTANA_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- range $key, $value := .Values.secrets.datas }}
          - name: {{ $key | upper }}
            valueFrom:
              secretKeyRef:
                  name: flocloud-device-secrets
                  key: {{ $key |   quote }}
          {{- end }}

          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
