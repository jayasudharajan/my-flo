include "akka-kafka-consumer.conf"
include "akka-kafka-producer.conf"
include "akka-http.conf"

puck-service {
  server {
    port = 8080
    port = ${?HTTP_SERVER_PORT}

    health-check-segment = ping
    health-check-segment = ${?HTTP_SERVER_HEALTH_CHECK_SEGMENT}
  }

  kafka {
    hosts = ${KAFKA_HOSTS}

    puck-telemetry-consumer {
      group-id = ${PUCK_TELEMETRY_CONSUMER_GROUP_ID}
      topic = ${PUCK_TELEMETRY_CONSUMER_TOPIC}
      poll-timeout = ${PUCK_TELEMETRY_CONSUMER_POLL_TIMEOUT}
      parallelism = 50
      parallelism = ${?PUCK_TELEMETRY_CONSUMER_PARALLELISM}
    }

    entity-activity-consumer {
      group-id = ${ENTITY_ACTIVITY_CONSUMER_GROUP_ID}
      topic = ${ENTITY_ACTIVITY_CONSUMER_TOPIC}
      poll-timeout = ${ENTITY_ACTIVITY_CONSUMER_POLL_TIMEOUT}
      parallelism = 50
      parallelism = ${?ENTITY_ACTIVITY_CONSUMER_PARALLELISM}
    }

    alert-status-producer.topic = ${ALERT_STATUS_PRODUCER_TOPIC}
  }

  http {
    device-api {
      base-uri = "http://flo-device-service.flocloud.co/v1"
      base-uri = ${?DEVICE_API_BASE_URI}

      endpoints: {
        fw-properties = "/devices/:id"
        action-rules = "/devices/:id/actionRules"
      }
    }

    notification-api {
      base-uri = "https://flo-notification-api.flocloud.co"
      base-uri = ${?NOTIFICATION_API_BASE_URI}

      endpoints = {
        events = "/events"
      }
    }

    public-gateway {
      base-uri = "https://api-gw-dev.flocloud.co/api/v2"
      base-uri = ${?PUBLIC_GATEWAY_BASE_URI}
      access-token = ${PUBLIC_GATEWAY_ACCESS_TOKEN}

      endpoints = {
        devices = "/devices"
        devices-by-id = "/devices/:id"
      }
    }
  }

  puck-telemetry-report {
    default-time-zone = "UTC"
    default-interval = "hourly"
  }

  database {
    dataSourceClassName = org.postgresql.ds.PGSimpleDataSource
    dataSource.serverName = ${PUCK_SERVICE_DB_HOST}
    dataSource.portNumber = ${PUCK_SERVICE_DB_PORT}
    dataSource.databaseName = ${PUCK_SERVICE_DB_NAME}
    dataSource.user = ${PUCK_SERVICE_DB_USER}
    dataSource.password = ${PUCK_SERVICE_DB_PASSWORD}
  }
}
