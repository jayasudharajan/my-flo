---
image: registry.gitlab.com/flotechnologies/devops/docker-tools:helm-v3-5-4

services:
  - docker:18.09-dind

variables:
  CI_REGISTRY: registry.gitlab.com
  CI_REGISTRY_IMAGE: "registry.gitlab.com/flotechnologies/flo-notification-router-v2"
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: "tcp://127.0.0.1:2375"

stages:
  - dependencies
  - build
  - build-docker
  - test
  - deploy

before_script:
  - apk add --no-cache make bash gettext docker  # TODO: this should be part of the compose image
  - mkdir -pv "${HOME}/.docker/"
  - echo "${DOCKER_AUTH_CONFIG}" > "${HOME}/.docker/config.json"
  - docker login
  - docker login --username "${CI_REGISTRY_USER}" --password "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
  - export DEPENDENCIES_SHORT_CHECKSUM=$(md5sum project/Dependencies.scala | head -c5 )

BuildDependencies:
  stage: dependencies
  script:
    - make dependencies-image
    - make dependencies-image-push
  tags:
    - build



Compile:
  stage: build
  image: registry.gitlab.com/flotechnologies/flo-notification-router-v2:build-latest
  except:
    - tags
  script:
    - mkdir -p /usr/local/sbt
    - export sbt_version=1.3.2 && export sbt_home=/usr/local/sbt && export PATH=$PATH:/usr/local/sbt/bin
    - wget -qO - --no-check-certificate "https://github.com/sbt/sbt/releases/download/v$sbt_version/sbt-$sbt_version.tgz" | tar xz -C $sbt_home --strip-components=1
    - chmod +x build.sh
    - bash build.sh
    - ls -lah target/ && ls -lah target/scala-2.12/
  artifacts:
    paths:
    - target/scala-2.12/app-assembly.jar
    untracked: true
  tags:
    - build

BuildDockerImage:
  stage: build-docker
  dependencies:
    - Compile
  except:
    - tags
  script:
    - make build
    - make push
  tags:
    - build

Sanity:
  stage: test
  allow_failure: true
  artifacts:
    when: always
    paths:
      # Collect logs
      - build.log

  dependencies:
    - Compile
  script:
    - make pull
    - make run-tests | tee build.log
  tags:
    - test


K8sDev:
  stage: deploy
  variables:
    VAULT_URL: ${VAULT_URL_DEV}
    VAULT_TOKEN: ${VAULT_TOKEN_DEV}
  dependencies:
    - Compile
  only:
    - dev
    - eks
  environment:
    name: dev-flo-cloud-eks
  script:
    - make environment
    - make deploy
  tags:
    - dev-flo-cloud-eks

K8sProd:
  stage: deploy
  variables:
    VAULT_URL: ${VAULT_URL_PROD}
    VAULT_TOKEN: ${VAULT_TOKEN_PROD}
  dependencies:
    - Compile
  only:
    - master
  environment:
    name: prod-eks
  script:
    - make environment
    - make deploy
  tags:
    - eks-prod
