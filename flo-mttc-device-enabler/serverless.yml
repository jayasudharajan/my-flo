---
service:
  name: flo-mttc-device-enabler

plugins:
  - serverless-webpack

resources:
  Resources:
    AWSLambdaVPCAccessExecutionRole:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        Description: Creating policy for VPC Connection.
        Roles:
          - {"Ref" : "IamRoleLambdaExecution"}
        PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DeleteNetworkInterface
              Resource: "*"

custom:
  defaultRegion: us-west-2
  defaultLambdaTimeout: 600 # 10 minutes
  defaultTimeout: 8000
  defaultMinDays: 21
  defaultDeviceScrollTtl: 10s
  defaultDeviceScrollSize: 20
  defaultApiV1DevicesPath: /info/devices
  defaultApiV2DevicesPath: /devices
  defaultMinFirmwareVersion: 3.5.13
  defaultCronScheduleExpression: cron(0 0 ? * SUN *)
  defaultIgnoreMttcOverride: false
  region: ${opt:region, self:custom.defaultRegion}
  lambdaTimeout: ${env:LAMBDA_TIMEOUT, self:custom.defaultLambdaTimeout}
  cronScheduleExpression: ${env:CRON_SCHEDULE_EXPRESSION, self:custom.defaultCronScheduleExpression}
  tablePrefix: ${env:TABLE_PREFIX, opt:stage}_
  accountId: ${env:ACCOUNT_ID}
  kafkaBrokerList: ${env:KAFKA_BROKER_LIST}
  kafkaTopic: ${env:KAFKA_TOPIC}
  kafkaTimeout: ${env:KAFKA_TIMEOUT, self:custom.defaultTimeout}
  kafkaConnectTimeout: ${env:KAFKA_CONNECT_TIMEOUT, self:custom.defaultTimeout}
  kafkaSocketTimeout: ${env:KAFKA_SOCKET_TIMEOUT, self:custom.defaultTimeout}
  mttcMinDays: ${env:MTTC_MIN_DAYS, self:custom.defaultMinDays}
  apiV1BaseUrl: ${env:API_V1_BASE_URL}
  apiV2BaseUrl: ${env:API_V2_BASE_URL}
  apiAccessToken: ${env:API_ACCESS_TOKEN}
  apiV1DevicesPath: ${env:API_V1_DEVICES_PATH, self:custom.defaultApiV1DevicesPath}
  apiV2DevicesPath: ${env:API_V2_DEVICES_PATH, self:custom.defaultApiV2DevicesPath}
  deviceScrollTtl: ${env:DEVICE_SCROLL_TTL, self:custom.defaultDeviceScrollTtl}
  deviceScrollSize: ${env:DEVICE_SCROLL_SIZE', self:custom.defaultDeviceScrollSize}
  minFirmwareVersion: ${env:MIN_FIRMWARE_VERSION, self:custom.defaultMinFirmwareVersion}
  ignoreMttcOverride: ${env:IGNORE_MTTC_OVERRIDE, self:custom.defaultIgnoreMttcOverride}

provider:
  name: aws
  runtime: nodejs8.10
  region: ${self:custom.region}
  vpc: ${file(vpc.${opt:stage}.yml):vpc}
  timeout: ${self:custom.lambdaTimeout}
  environment:
    TABLE_PREFIX: ${self:custom.tablePrefix}
    KAFKA_BROKER_LIST: ${self:custom.kafkaBrokerList}
    KAFKA_TOPIC: ${self:custom.kafkaTopic}
    KAFKA_TIMEOUT: ${self:custom.kafkaTimeout}
    KAFKA_CONNECT_TIMEOUT: ${self:custom.kafkaConnectTimeout}
    KAFKA_SOCKET_TIMEOUT: ${self:custom.kafkaSocketTimeout}
    MTTC_MIN_DAYS: ${self:custom.mttcMinDays}
    API_V1_BASE_URL: ${self:custom.apiV1BaseUrl}
    API_V2_BASE_URL: ${self:custom.apiV2BaseUrl}
    API_ACCESS_TOKEN: ${self:custom.apiAccessToken}
    API_V1_DEVICES_PATH: ${self:custom.apiV1DevicesPath}
    API_V2_DEVICES_PATH: ${self:custom.apiV2DevicesPath}
    DEVICE_SCROLL_TTL: ${self:custom.deviceScrollTtl}
    DEVICE_SCROLL_SIZE: ${self:custom.deviceScrollSize}
    MIN_FIRMWARE_VERSION: ${self:custom.minFirmwareVersion}
    IGNORE_MTTC_OVERRIDE: ${self:custom.ignoreMttcOverride}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:Query"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${self:custom.accountId}:table/${self:custom.tablePrefix}MicroLeakTestTime"

functions:
  handle:
    handler: src/main.handle
    events:
      - schedule: ${self:custom.cronScheduleExpression}

