#!/usr/bin/env bash


if [[ "$ENVIRONMENT" == "local" ]]
then
    export EB_ENVIRONMENT_NAME="${APPLICATION_NAME}-${ENVIRONMENT}"
    export AGENT_HOSTNAME="${APPLICATION_NAME}-${ENVIRONMENT}"

else
    export EB_ENVIRONMENT_NAME="${APPLICATION_NAME}-${ENVIRONMENT}"
    export IP_ADDRESS=$(wget -qO- http://169.254.169.254/latest/meta-data/local-ipv4)
    export AGENT_HOSTNAME="${EB_ENVIRONMENT_NAME}-${IP_ADDRESS}"
fi

if [[ "$ENVIRONMENT" == "prod" ]]
then
    if [[ -z "${LOGSTASH_HOST:-}" ]]
    then
      export LOGSTASH_HOST="logstash.corp.flosecurecloud.com"
    fi
    export PUBLIC_BUCKET="flosecurecloud-public"
else
    if [[ -z "${LOGSTASH_HOST:-}" ]]
    then
      export LOGSTASH_HOST="logstash.corp.flocloud.co"
    fi
    export PUBLIC_BUCKET="flocloud-public"
fi


# Detect Application Platform
if [[ -f "/app/package.json" ]]
then
    export APPLICATION_PLATFORM="node"
elif [[ -f "/app/setup.py" ]] || [[ -f "/app/app.py" ]]
then
    export APPLICATION_PLATFORM="python"
elif [[ -d "/go" ]]
then
    export APPLICATION_PLATFORM="golang"
else
    export APPLICATION_PLATFORM="java"
fi

# Defaults
if [[ -z "${CA_URL:-}" ]]
then
  # TODO: Deprecate this and use root CA eventually, until then pass the url
  # export CA_URL='http://flotech-public.s3.amazonaws.com/ca/flo-root-ca.cert.pem'
  export CA_URL="https://s3-us-west-2.amazonaws.com/${PUBLIC_BUCKET}/ca/${LOGSTASH_HOST}.crt"
fi


if [[ -z "${JMX_ENABLED:-}" ]]
then
  export JMX_ENABLED='false'
fi

if [[ -z "${JOLOKIA_ENABLED:-}" ]]
then
  export JOLOKIA_ENABLED='false'
fi

if [[ -z "${TELEGRAF_ENABLED:-}" ]]
then
  export TELEGRAF_ENABLED='false'
fi

if [[ -z "${STATSD_HOST:-}" ]]
then
  export STATSD_HOST='localhost'
fi

if [[ -z "${STATSD_PORT:-}" ]]
then
  export STATSD_PORT='8125'
fi

if [[ -z "${HEAP_PERCENTAGE:-}" ]]
then
  export HEAP_PERCENTAGE=50
fi

if [[ -z "${KAFKA_PLATFORM:-}" ]]
then
  export KAFKA_PLATFORM='false'
fi

if [[ -z "${NEWRELIC_ENABLED:-}" ]]
then
  export NEWRELIC_ENABLED='false'
fi

if [[ -z "${DATADOG_ENABLED:-}" ]]
then
  export DATADOG_ENABLED='false'
fi

if [[ -z "${HOSTNAME_PASSTHROUGH:-}" ]]
then
  export HOSTNAME_PASSTHROUGH='false'
fi

if [[ -z "${DATA_DISK_ENABLED:-}" ]]
then
  export DATA_DISK_ENABLED='false'
fi


# SET JVM HEAP (MB)
export SYSTEM_MEMORY=$(awk '/MemTotal/ {print $2}' /proc/meminfo)
if [[ ! -z "${SYSTEM_MEMORY:-}" ]]
then
  if [[ ${SYSTEM_MEMORY} -gt 1 ]]
  then
    # KB -> MB
    export JVM_HEAP=$(($SYSTEM_MEMORY * $HEAP_PERCENTAGE / 100 / 1024 ))
  fi
fi

# Load env vars
if [[ -f "/etc/env" ]]
then
  source /etc/env
fi


# Helper Functions
function log {
  message=$1

  if [ ! -z "$2" ]
  then
    state=$2;
  else
    state="started"
  fi

# 2016-11-23 16:36:49,898 INFO success
  timestamp=$(date +"%Y-%m-%d %T,%3N")
  log_level="INFO"

  echo "$timestamp $log_level $state: $message"
}

function yum_ensure_absent {
  if yum list installed "$@" >/dev/null 2>&1; then
    yum remove -y "$@"
  fi
}