#!/usr/bin/env bash


source /usr/local/bin/app-env

echo "APPLICATION_PLATFORM: $APPLICATION_PLATFORM"

# Create Directories & Files
mkdir -p /var/log/app
mkdir -p /etc/pki/CA/certs
touch /var/run/utmp

if [[ "${HOSTNAME_PASSTHROUGH}" == "true" ]];
then
  echo "Updating hostname"
  export HOSTNAME=$(cat /etc/hostname)
  export PARENT_IP=$(cat /etc/parent-ip)

  sed -r "s/((172|10)\.[0-9]+\.[0-9]+\.[0-9])\s(\w*)/$PARENT_IP $HOSTNAME/" /etc/hosts > /tmp/hosts-sed && cat /tmp/hosts-sed > /etc/hosts
fi


echo "Downloading environment-specific files"
wget -q https://s3-us-west-2.amazonaws.com/${PUBLIC_BUCKET}/ca/${INFLUXDB_HOST}.crt -O /etc/pki/CA/certs/${INFLUXDB_HOST}.crt

# Detect jinja version
if [[ -x $(which jinja2) ]]
then
  J="env | jinja2 --strict --format=env"
elif [[ -x $(which j2) ]]
then
  J="j2 -f env"
fi

echo "Generating configs out of templates with $J"
$J /etc/templates/supervisord.j2.conf > /etc/supervisord.conf && \
if [[ "$TELEGRAF_ENABLED" == 'true' ]]; then $J /etc/templates/telegraf.j2.conf > /etc/telegraf/telegraf.conf; fi && \

if [[ "$NEWRELIC_ENABLED" == 'true' ]]; then $J /etc/templates/newrelic/newrelic.j2.yml > /app/newrelic.yml; fi && \

echo "Done" || ( echo "Error rendering templates" && exit 1 )

if [[ "$KAFKA_PLATFORM" == 'true' ]]
then
  $J /etc/templates/kafka/connect-distributed.j2.properties | install -D  /dev/stdin /etc/kafka/connect-distributed.properties && \
  $J /etc/templates/kafka/hadoop-conf/hdfs-site.j2.xml | install -D /dev/stdin /etc/kafka/hadoop-conf/hdfs-site.xml
fi

exec /usr/bin/supervisord -c /etc/supervisord.conf -n
