files:
  "/usr/bin/sync-ssh-users":
    mode: "00755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      source /etc/env

      if [ -z "${MANAGE_USERS_ENABLED:-}" ] || [ "${MANAGE_USERS_ENABLED}" != "true" ]; then
        echo "Skipping synchronizing users from SSM..."
        exit 0
      fi

      passwordless_sudo_group=floadmins
      temp_params_file=$(mktemp)
      temp_existing_users_list=$(mktemp)
      temp_reference_users_file=$(mktemp)

      trap "rm -f $temp_file $temp_existing_users_list $temp_reference_users_file" 0 2 3 15


      if [ ! $(getent group $passwordless_sudo_group) ]; then
        groupadd $passwordless_sudo_group
      fi
      if [ ! $(egrep '^%$passwordless_sudo_group' /etc/sudoers) ]; then
        echo "%${passwordless_sudo_group} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
      fi

      aws ssm get-parameters-by-path --path /$ENVIRONMENT/users --recursive | jq -r '.Parameters | .[] | .Name + ";" + .Value' > $temp_params_file
      while IFS="\n" read -r row || [[ -n "$row" ]]; do
        USERNAME=$(echo $row | cut -d ';' -f 1 | cut -d '/' -f 4)
        KEY=$(echo $row | cut -d ';' -f 2)
        if [ ! $(getent passwd $USERNAME ) ]; then
          useradd -m -G $passwordless_sudo_group $USERNAME
          mkdir /home/$USERNAME/.ssh/
          echo $KEY > /home/$USERNAME/.ssh/authorized_keys
        fi
        echo $USERNAME
      done < $temp_params_file | sort > $temp_reference_users_file

      egrep '^'$passwordless_sudo_group':' /etc/group | sed -e 's/^.*://' | tr ',' '\n' | sort > $temp_existing_users_list

      while IFS="\n" read -r row || [[ -n "$row" ]]; do
        userdel -rf $row
      done < <(diff --unchanged-group-format=''  $temp_existing_users_list $temp_reference_users_file)

container_commands:
    1_sync_users:
      command: /usr/bin/sync-ssh-users