---
image: registry.gitlab.com/flotechnologies/gitlabci-docker-compose:18.06-fat

services:
  - docker:18.09-dind

stages:
  - build
  - test
  - push
  - deploy

variables:
  CI_REGISTRY: registry.gitlab.com
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: "tcp://localhost:2375"
  DOCKER_REGISTRY: "registry.gitlab.com/flotechnologies"
  AWS_ECR_REPOSITORY: "registry.gitlab.com/flotechnologies"
  DOCKER_TAG: "${CI_PIPELINE_ID}"

before_script:
  - |
    # Export Vars
    export BUILD_TIMESTAMP="$(date '+%Y%m%d.%H%M')"
    export BUILD_ROOT="${CI_PROJECT_DIR}"

    # Create directories

    mkdir -p ~/.ssh /root/.ssh
    chmod 700 ~/.ssh /root/.ssh

    docker login --username "${GITLAB_REGISTRY_USERNAME}" --password "${GITLAB_REGISTRY_TOKEN}" "${CI_REGISTRY}"

Compile:
  stage: build
  except:
    - tags
  artifacts:
    paths:
      - image
      - target/scala-*/app.jar
      - logs/
      - node_modules/
      - dist
    expire_in: 1 week
    # Cache modules in between jobs
  cache:
    untracked: true
    key: "$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - target/
      - .ivy2/
      - .sbt/
      - .npm/
      - node_modules
  variables:
    USER: ubuntu
  script:
    - |
      source .ci/.env.rc
      set -euo pipefail

      # In case we don't have .ebextensions
      # mkdir -p $BUILD_ROOT/.ebextensions/

      # Copy .ebextentions
      # cp -R $BUILD_ROOT/.app/.ebextensions/* $BUILD_ROOT/.ebextensions/

      # make prep-beanstalk

      # Run app build
      # docker-compose run build
      # docker-compose build app
      make build

      # Ensure tags are set
      # docker tag ${AWS_ECR_REPOSITORY}/${CI_PROJECT_NAME} ${AWS_ECR_REPOSITORY}/${CI_PROJECT_NAME}:latest
      # docker tag ${AWS_ECR_REPOSITORY}/${CI_PROJECT_NAME} ${AWS_ECR_REPOSITORY}/${CI_PROJECT_NAME}:${CI_PIPELINE_ID}
      make tag
      # mkdir -p image && docker save ${AWS_ECR_REPOSITORY}/${CI_PROJECT_NAME} > image/${CI_PROJECT_NAME}_${CI_PIPELINE_ID}.tar
      make save-image


Sanity:
  stage: test
  allow_failure: true
  dependencies:
    - Compile
  script: |
    # ./.app/.ci/test.sh
    make test

ECR:
  stage: push
  dependencies:
    - Compile
  script: |
    source .ci/.env.rc
    set -euo pipefail
    make push

dev-k8s:
  stage: deploy
  image: registry.gitlab.com/flotechnologies/devops/docker-tools:helm-v3-5-4
  dependencies:
    - Compile
  only:
    - dev
    - eks
    - /^dev\./
  environment:
    name: dev-flo-cloud-eks
    url: https://kibana.flotech.co
  variables:
    DEPLOYMENT_PLATFORM: "kubernetes"
    NODE_ENV: "development"
    VAULT_URL: ${VAULT_URL_DEV}
    VAULT_TOKEN: ${VAULT_TOKEN_DEV}
  script: |
    make environment
    make deploy
  tags:
    - dev-flo-cloud-eks

prod-k8s:
  stage: deploy
  image: registry.gitlab.com/flotechnologies/devops/docker-tools:helm-v3-5-4
  dependencies:
    - Compile
  only:
    - master
  environment:
    name: prod-eks
    url: https://kibana.flotech.co
  variables:
    VAULT_URL: ${VAULT_URL_PROD}
    VAULT_TOKEN: ${VAULT_TOKEN_PROD}
    ENV: prod
  script: |
    make environment
    make deploy
  tags:
    - eks-prod
