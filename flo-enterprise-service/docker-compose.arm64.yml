version: '3.2'

services:
  app:
    image: flo-enterprise-service:local
    ports:
      - "8080:8080"
    environment:
      APPLICATION_NAME: "flo-enterprise-service"
      FLO_HTTP_PORT: 8080
      FLO_PGDB_CN: "postgres://postgres:pwd@postgres:5432?sslmode=disable"
      FLO_REDIS_CN: "redis:6379"
      PG_USER: "postgres"
      PG_PASS: "pwd"
      FLO_API_URL: "https://api-gw-dev.flocloud.co"
      FLO_API_JWT: "${FLO_API_JWT:-'dummy1111.jwt222222.key3333333'}"
      #FLO_KAFKA_CN: "kafka-cherry-broker-1.dev.flocloud.co:9092,kafka-cherry-broker-2.dev.flocloud.co:9092,kafka-cherry-broker-3.dev.flocloud.co:9092"
      FLO_KAFKA_CN: "kafka:9092"
      FLO_LOCAL_DEBUG: "true"
      FLO_LOG_MIN_LEVEL: 0
      #FLO_HTTP_LOG_PATH_IGNORES: "/|/ping"
      FLO_API_TOKEN: "${FLO_API_TOKEN:-empty}"
      FLO_KAFKA_ENTITY_ACTIVITY_GROUP_ID: "${FLO_KAFKA_ENTITY_ACTIVITY_GROUP_ID:-'flo-enterprise-service-local'}"
      FLO_KAFKA_ENTITY_ACTIVITY_TOPIC: "${FLO_KAFKA_ENTITY_ACTIVITY_TOPIC:-'flo-enterprise-service-local-topic'}"
      MIN_FLO_SENSE_FW_VERSION: "${MIN_FLO_SENSE_FW_VERSION:-'5.2.11'}"
      MIN_FW_PROPERTIES_FW_VERSION: "${MIN_FW_PROPERTIES_FW_VERSION:-'5.2.9'}"
      ATT_API_URL: "${ATT_API_URL:-'https://simcontrolcenter.wireless.att.com'}"
      ATT_API_KEY: "${ATT_API_URL:-empty}"
    volumes:
      - "./src:/src"
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_started
      postgres:
        condition: service_started
    build:
      context: .
      dockerfile: ./Dockerfile.arm64.build
      args:
        CI_COMMIT_SHA: "${CI_COMMIT_SHA:-none}"

  redis:
    image: bitnami/redis:latest
    #CONNECT w/ local client (psql can be used instead of redis-cli also): redis-cli -u redis://localhost:6379
    ports:
      - "6379:6379"
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
      #- "REDIS_PASSWORD=pwd"
    # volumes:
    #   - "./db/tmp/redis:/bitnami/redis/data"
    restart: on-failure
    logging:
      driver: none

  postgres:
    image: postgres:latest
    #CONNECT w/ local client: pgcli -h localhost -U postgres
    ports:
      - "5432:5432"
    #NOTE: schema bootstrap only happens if ./db/tmp/postgres is missing!
    volumes:
      - "$PWD/db/schema:/docker-entrypoint-initdb.d"
#      - "$PWD/db/tmp/postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: "pwd"

  zookeeper:
    image: "bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    restart: on-failure
    # volumes:
    #   - "./db/tmp/zookeeper:/bitnami/zookeeper"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    logging:
      driver: none

  #NOTE: both zookeeper & kafka username & pwd are: user & bitnami
  kafka:
    image: kafka:local
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    #CONNECT tail w/ local client (run 2x, 1st run will mk topic): kafkacat -C -b localhost:29092 -t 'email-weekly-loc' -p 0
    #push dummy data w/ local client: echo '{"client_app_name":"kafcat"}' | kafkacat -P -b localhost:29092 -t 'email-weekly-loc' -p 0
    ports:
      - "9092:9092"
      - "29092:29092"
    # volumes:
    #   - "./db/tmp/kafka:/bitnami/kafka"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper
    build:
      context: .
      dockerfile: ./Dockerfile.kafka
    logging:
      driver: none
