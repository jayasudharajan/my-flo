def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlinx-serialization'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

apply from: 'git-version.gradle'
apply plugin: 'io.fabric'
apply plugin: 'embrace-swazzler'
apply plugin: 'com.google.firebase.appdistribution'


android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.flotechnologies.dev"
        minSdkVersion 16
        targetSdkVersion 28
        versionName gitVersionName
        versionCode gitVersionCode
        //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        multiDexKeepProguard file('androidx.pro')
    }

    Properties props = new Properties()
    props.load(new FileInputStream("${projectDir}/.signing.properties"))

    signingConfigs {
        dev {
            storeFile file("${projectDir}/.debug.keystore")
            storePassword props['STORE_PASSWORD_DEV'] // independent for security
            keyAlias "com.flotechnologies-debug"
            keyPassword props['KEY_PASSWORD_DEV'] // independent for security
        }
        prod {
            storeFile file("${projectDir}/.release.keystore")
            storePassword props['STORE_PASSWORD'] // independent for security
            keyAlias "com.flotechnologies-release"
            keyPassword props['KEY_PASSWORD'] // independent for security
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.prod
        }
        release {
            signingConfig signingConfigs.prod
            //shrinkResources true
            //minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseAppDistribution {
                //releaseNotesFile="/path/to/releasenotes.txt"
                //testers="ali@example.com, bri@example.com, cal@example.com"
                testers="yongjhih@gmail.com"
            }
            ndk {
                abiFilters 'armeabi-v7a', 'x86', 'x86_64'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.13.0"
    implementation 'androidx.core:core-ktx:1.1.0'
    //implementation 'androidx.core:core-ktx:1.0.0'

    //implementation "androidx.appcompat:appcompat:1.1.0"
    //implementation "androidx.appcompat:appcompat:1.0.2"

    //implementation "androidx.annotation:annotation:1.1.0"
    //implementation "androidx.annotation:annotation:1.0.0"

/*
    implementation 'com.android.support:support-compat:28.0.0'
    implementation "com.android.support:support-core-ui:28.0.0"
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support:support-fragment:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    //implementation "com.android.support:support-core-utils:28.0.0"
    implementation 'com.google.firebase:firebase-core:16.0.7'
    //implementation 'com.google.firebase:firebase-firestore:19.0.2'
    implementation 'com.google.firebase:firebase-firestore:18.2.0'
    implementation 'com.google.firebase:firebase-auth:16.1.0'
    implementation 'com.google.android.gms:play-services-basement:16.1.0'
    implementation 'com.android.support:multidex:1.0.1'
*/

    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.google.firebase:firebase-auth:19.0.0'
    implementation 'com.google.firebase:firebase-firestore:21.1.1'

    implementation 'com.amazonaws:aws-android-sdk-pinpoint:2.15.+'
    implementation ('com.amazonaws:aws-android-sdk-mobile-client:2.15.+@aar') { transitive = true }


    /*
    implementation(group: 'com.zendesk', name: 'support', version: '2.3.0') { // 2.3.1, 3.0.1
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'

        exclude group: 'com.sebchlan.picassocompat', module: 'picassocompat-parent'
        exclude group: 'com.sebchlan.picassocompat', module: 'picassocompat-271828'
        exclude group: 'com.sebchlan.picassocompat', module: 'picassocompat'
    }
    implementation(group: 'com.zopim.android', name: 'sdk', version: '1.3.7.1') { // 1.3.7.1, 1.4.2, 1.4.5
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'

        exclude group: 'com.sebchlan.picassocompat', module: 'picassocompat-parent'
        exclude group: 'com.sebchlan.picassocompat', module: 'picassocompat-271828'
    }
    */

    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
      transitive = true
    }

    testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    /// ref. https://flutter.dev/docs/development/packages-and-plugins/androidx-compatibility
}

apply plugin: 'com.google.gms.google-services'

embrace {
  appId = 'CHFqN'
  apiToken = 'd1d9df384a9a465e83afb3a285e4dfb9'
}
