---
# Source: vault/templates/pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-vault
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: vault
      release: release-name

---
# Source: vault/templates/configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: "release-name-vault-config"
  labels:
    app: "vault"
    release: "release-name"
    heritage: "Tiller"
    chart: "vault-0.23.4"
data:
  config.json: |
    {"listener":{"tcp":{"address":"[::]:8200","cluster_address":"[::]:8201","tls_disable":true}},"seal":{"awskms":{"kms_key_id":"2626a7b4-d67c-422c-9beb-08c90d4a57ef","region":"us-east-2"}},"storage":{"consul":{"address":"localhost:8500","path":"vault"}}}


---
# Source: vault/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-vault
  labels:
    app: vault
    chart: "vault-0.23.4"
    release: "release-name"
    heritage: "Tiller"
---
# Source: vault/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-vault
  labels:
    app: vault
    chart: vault-0.23.4
    release: "release-name"
    heritage: "Tiller"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: release-name-vault
  namespace: vault
---
# Source: vault/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-vault
  labels:
    app: vault
    chart: vault-0.23.4
    release: release-name
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
  - port: 8200
    protocol: TCP
    targetPort: 8200
    name: api
  selector:
    app: vault
    release: release-name

---
# Source: vault/templates/tests/test-vault-status.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-vault-status-test"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: release-name-vault-status-test
    image: "vault:1.0.3"
    env:
      - name: VAULT_ADDR
        value: http://release-name-vault.vault:8200
    command: ["sh", "-c", "vault status"]
  restartPolicy: Never

---
# Source: vault/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-vault
  labels:
    app: vault
    chart: vault-0.23.4
    release: release-name
    heritage: Tiller
  annotations:
    {}
    
spec:
  selector:
    matchLabels:
      app: vault
      release: release-name
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: vault
        release: release-name
      annotations:
        checksum/config: 8f3983b2688172b6f7e84e3ed2b3fa046484896705ead36c09b1157f6d7751e4
    spec:
      containers:
      - name: vault-consul-agent
        image: "consul:1.5.3"
        imagePullPolicy: IfNotPresent
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: consul-data
          mountPath: /etc/consul
        - name: consul-gossip-key
          mountPath: /etc/consul/secrets
          readOnly: true
        command:
          - "/bin/sh"
          - "-ec"
          - |
            if [ -e /etc/consul/secrets/gossip-key ]; then
              echo "{\"encrypt\": \"$(base64 /etc/consul/secrets/gossip-key)\"}" > /etc/consul/encrypt.json
              GOSSIP_KEY="-config-file /etc/consul/encrypt.json"
            fi

            exec /bin/consul agent \
              $GOSSIP_KEY \
              $AGENT_TOKEN \
              -join=consul.consul.svc.cluster.local \
              -data-dir=/etc/consul
        resources:
          {}
          
      - name: vault
        image: "vault:1.0.3"
        imagePullPolicy: IfNotPresent
        command: ["vault", "server", "-config", "/vault/config/config.json"]
        ports:
        - containerPort: 8200
          name: api
        - containerPort: 8201
          name: cluster-address
        livenessProbe:
          # Alive if Vault is successfully responding to requests
          httpGet:
            path: /v1/sys/health?standbyok=true&uninitcode=204&sealedcode=204&
            port: 8200
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          # Ready depends on preference
          httpGet:
            path: /v1/sys/health?standbycode=204&uninitcode=204&
            port: 8200
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            add:
            - IPC_LOCK
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: VAULT_API_ADDR
            value: "http://$(POD_IP):8200"
          - name: VAULT_CLUSTER_ADDR
            value: "https://$(POD_IP):8201"
          - name: VAULT_LOG_LEVEL
            value: "info"
          - name: VAULT_UI
            value: "true"
          
        resources:
          {}
          
        volumeMounts:
        - name: vault-config
          mountPath: /vault/config/
        - name: vault-root
          mountPath: /root/
      - image: prom/statsd-exporter:latest
        name: statsd-exporter
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: 'vault'
                  release: 'release-name'
              topologyKey: kubernetes.io/hostname
            weight: 100
        
      serviceAccountName: release-name-vault
      volumes:
        - name: vault-config
          configMap:
            name: "release-name-vault-config"
        - name: vault-root
          emptyDir: {}
        - name: consul-data
          emptyDir: {}
        - name: consul-gossip-key
          secret:
            secretName: consul-gossip-key

---
# Source: vault/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-vault
  labels:
    app: vault
    chart: "vault-0.23.4"
    release: "release-name"
    heritage: "Tiller"
  annotations:
      kubernetes.io/ingress.class: "nginx-internal"
spec:
  rules:
    - host: vault.flocloud.co
      http:
        paths:
          - backend:
              serviceName: release-name-vault
              servicePort: 8200
---
# Source: vault/templates/backend-config.yaml

---
# Source: vault/templates/prometheusrules.yaml

---
# Source: vault/templates/servicemonitor.yaml

