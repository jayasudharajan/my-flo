### TO DEPLOY SQL RUNNERS IN THE CLUSTER
### FROM LENSES YOU NEED TO PATCH THE SERVICE ACCOUNT
### LENSES WILL USE TO DEPLOY. SEE:
### https://docs.lenses.io/install_setup/deployment-options/kubernetes-deployment.html

# Basic info
replicaCount: 1


# Monitoring
monitoring:
  pipeline: lenses
  enabled: true
  port: 9102
  path: "/metrics"

# Resource management
resources:
  limits:
    memory: 5Gi
  requests:
    memory: 4Gi

# rbacEnable indicates if a the cluster has rbac enabled and a cluster role
# and rolebinding should be created for the service account
rbacEnable: true

# restPort is the Lenses rest port
restPort: 3030
servicePort: 80

# serviceAccount is the Service account to be used by Lenses to deploy apps
serviceAccount: default

# If you use Data Policies module enable a Persistent Volume to keep your data policies rule.
persistence:
  enabled: false
  accessModes:
    - ReadWriteOnce
  size: 5Gi
  # set to true to use you own Persistent volume claim
  existingClaim: false

  ## Policies data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

#service
service:
  enabled: true
  type: ClusterIP
  annotations: {}

  ## Load balancer IP address
  ## Is not required, but allows for static address with
  ## serviceType LoadBalancer.
  ## If not supported by cloud provider, this field is ignored.
  ## Default: nil
  ##
  # loadBalancerIP: 130.211.x.x

  ## This will restrict traffic through the cloud-provider load-balancer
  ## to the specified client IPs.
  ## If not supported by cloud provider, this field is ignored.
  ## Default: nil
  ##
  # loadBalancerSourceRanges:
  #   - 0.0.0.0/0

ingress:
  ## If true, Ingress will be created
  ##
  enabled: false
  host:

  # Ingress annotations
  annotations:
    kubernetes.io/ingress.class: traefik
#    kubernetes.io/ingress.class: nginx
#    kubernetes.io/tls-acme: 'true'
#    nginx.ingress.kubernetes.io/rewrite-target: /

  # TLS if enabled load the tls.crt and tls.keys as a secrets and enable TLS on the ingress
  tls:
    enabled: false
    crt: |-
    key: |-

apigateway:
  image:
    repository: mendersoftware/api-gateway
    tag: 2.0.0
    pullPolicy: IfNotPresent
  restPort: 443


deviceauth:
  image:
    repository: mendersoftware/deviceauth
    tag: 2.0.0
    pullPolicy: IfNotPresent
  restPort: 8080
  certs:
    key: |
      -----BEGIN RSA PRIVATE KEY-----
      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
      -----END RSA PRIVATE KEY-----

conductor:
  image:
    repository: mendersoftware/mender-conductor
    tag: 1.3.1
    pullPolicy: IfNotPresent
  restPort: 8080
  configDir: ""

inventory:
  image:
    repository: mendersoftware/inventory
    tag: 1.6.0
    pullPolicy: IfNotPresent
  restPort: 8080

useradm:
  image:
    repository: mendersoftware/useradm
    tag: 1.7.0
    pullPolicy: IfNotPresent
  restPort: 8080
  certs:
    key: |
      -----BEGIN RSA PRIVATE KEY-----
      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
      -----END RSA PRIVATE KEY-----
deployments:
  image:
    repository: mendersoftware/deployments
    tag: 1.7.0
    pullPolicy: IfNotPresent
  restPort: 8080
  storageproxy:
    crt: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS2gAwIBAgIJAJHyam4fO9LvMAoGCCqGSM49BAMCMCAxHjAcBgNVBAMM
      FW1lbmRlci1zMy5mbG90ZWNoLmNvbTAeFw0xNzExMDMxODU3NTJaFw0yNzExMDEx
      ODU3NTJaMCAxHjAcBgNVBAMMFW1lbmRlci1zMy5mbG90ZWNoLmNvbTBZMBMGByqG
      SM49AgEGCCqGSM49AwEHA0IABCf1KuMdMr6TG+gMQVK85cK+VwLjYeijPvat/dcl
      nu50+g6Y1z2W++YyhOQ6M3J4nvQcy7Ryq/N/rIaUAyhhiOqjUDBOMB0GA1UdDgQW
      BBS6Cjam/VT5i9RSPIITsGwat7HRnjAfBgNVHSMEGDAWgBS6Cjam/VT5i9RSPIIT
      sGwat7HRnjAMBgNVHRMEBTADAQH/MAoGCCqGSM49BAMCA0gAMEUCIG3w7ytHgQZe
      PzqPXbLkUUwAvG9+1k29i1EvcIndfd6OAiEA2OonmI0QvkwdpIjkUYRBzwQMBlc9
      dah3uHnRLtsbuVc=
      -----END CERTIFICATE-----
openresty:
  restPort: 9000
  image:
    repository: openresty/openresty
    tag: 1.13.6.2-0-alpine
    pullPolicy: IfNotPresent
  configDir: "config/openresty"

redis:
  image:
    repository: redis
    tag: 5-alpine3.8
    pullPolicy: IfNotPresent
  persistence:
    storageClassName: "gp2"
    size: "5Gi"
  restPort: 6379

elasticsearch:
  image:
    repository: elasticsearch
    tag: 5-alpine
    pullPolicy: IfNotPresent
  persistence:
    storageClassName: "gp2"
    size: "50Gi"
  restPort: 9200

gui:
  image:
    repository: mendersoftware/gui
    tag: 2.0.1
    pullPolicy: IfNotPresent
  restPort: 80

minio:
  image:
    repository: minio/minio
    tag: RELEASE.2018-09-25T21-34-43Z
    pullPolicy: IfNotPresent
  restPort: 9000
