version: '2'

services:
  ######################################################
  # Runtime Services
  ######################################################
  app:
    build:
      context: .
      dockerfile: ./Dockerfile-base
    ports:
      - "8000:8000"
      - "9001:9001"
      - "8778:8778"
    container_name: flo-app
    image: 098786959887.dkr.ecr.us-west-2.amazonaws.com/flo-directive-router
    volumes:
      - ./logs:/var/log/app
      - ./.docker/templates/:/etc/templates/

    environment:
      ENVIRONMENT: local
      APPLICATION_NAME: flo-directive-router
      LOG_STDOUT: "true"
      APP_DEBUG: "true"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      KAFKA_HOST: "kafka:9092"
      ZOOKEEPER_HOST: "kafka:2181"
      STATSD_HOST: localhost
      STATSD_PORT: 8125
      FLO_API_URL: "https://api.com/api/v1"
      FLO_API_CLIENT_ID: "some-client-id"
      FLO_API_CLIENT_SECRET: "some-secret"
      MQTT_BROKER: "${MQTT_BROKER}"
      MQTT_TOPIC_TEMPLATE: "mqtt-topic"
      MQTT_DIRECTIVES_TOPIC_TEMPLATE: "${MQTT_DIRECTIVES_TOPIC_TEMPLATE}"
      MQTT_UPGRADE_TOPIC_TEMPLATE: "${MQTT_UPGRADE_TOPIC_TEMPLATE}"
      MQTT_CLIENT_CERT: "${MQTT_CLIENT_CERT}"
      MQTT_CLIENT_KEY: "${MQTT_CLIENT_KEY}"
      MQTT_CA_CERTIFICATE: "${MQTT_CA_CERTIFICATE}"
      AWS_CONFIG_BUCKET: "${AWS_CONFIG_BUCKET}"
      KAFKA_GROUP_ID: "group0"
      KAFKA_TOPIC: "${KAFKA_TOPIC}"
      KAFKA_ENCRYPTION_ENABLED: "false"
      KEY_PROVIDER_BUCKET_REGION: us-west-2
      KEY_PROVIDER_BUCKET_NAME: flocloud-config
      KEY_PROVIDER_KEY_PATH_TEMPLATE: flo-apps/flo-encryption/dev/kafka/@KEY_ID/@KEY_TYPE_key.pem
      KEY_ID: "${KEY_ID}"
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "flo-directive-router-local"
      KILL_SWITCH_ENABLED: "false"
      KAFKA_FILTER_TIME_IN_SECONDS: 300
      KAFKA_CONSUMER_POLL_TIMEOUT: 3000
      KAFKA_CONSUMER_MAX_POLL_RECORDS: 10
      DATADOG_API_KEY: changeit

  local:
    extends: app
    environment:
      AWS_CONFIG_BUCKET: flocloud-ci-tests
    depends_on:
      - kafka

  kafka:
    image: 098786959887.dkr.ecr.us-west-2.amazonaws.com/flo-kafka:2.12-0.10.2.1-alpine
    container_name: kafka
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
      LOG_RETENTION_HOURS: 336

  ######################################################
  # Build Services
  ######################################################
  # This is used to build jar
  build:
    image: 098786959887.dkr.ecr.us-west-2.amazonaws.com/flo-scala-docker:SCALA_2.12.6-SBT_1.1.4-alpine-build
    command:  /bin/bash -c "sbt assembly"
    environment:
      APPLICATION_NAME: app
    volumes:
      - ./:/app/build
      - "${HOME}/.ivy2:/root/.ivy2"
      - "${HOME}/.sbt:/root/.sbt"

  dev:
    image: 098786959887.dkr.ecr.us-west-2.amazonaws.com/flo-scala-docker:SCALA_2.12.6-SBT_1.1.4-alpine-build
    command: /bin/bash -c "sbt clean compile run"
    environment:
      APPLICATION_NAME: app
    volumes:
      - ./:/app/build
      - "${HOME}/.ivy2:/root/.ivy2"
      - "${HOME}/.sbt:/root/.sbt"
    depends_on:
      - kafka


  test:
    image: 098786959887.dkr.ecr.us-west-2.amazonaws.com/flo-scala-docker:SCALA_2.12.6-SBT_1.1.4-alpine-build
    container_name: test
    links:
      - local
    depends_on:
      - local

    environment:
      APPLICATION_NAME: flo-directive-router
      ENVIRONMENT: local
    volumes:
      - ./tests:/app/tests
      - "./test-results:/app/test-results"
    command: |
      /bin/bash -c " \
        echo \"Running tests: $$APPLICATION_NAME\" && \
        echo 'SLEEP' && sleep 30 && \
        printf 'PING: ' && curl -s local:8000 > /dev/null && echo 'OK' || (printf 'FAIL' && exit 1) \
      "